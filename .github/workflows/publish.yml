name: Publish

on:
  workflow_dispatch: 
    inputs:
      publish_type:
        description: 'Type of publish (major, minor, patch)'
        required: true

jobs:
  trigger-build:
    runs-on: ubuntu-latest
    outputs:
      build_workflow_run_id: ${{ steps.get-build-run-id.outputs.run_id }}
    steps:
      - name: Trigger Build Workflow
        id: trigger-build
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Build
          token: ${{ secrets.GH_PAT }}

      - name: Fetch the Build Workflow Run ID
        id: get-build-run-id
        run: |
          BUILD_RUN_ID=$(gh api repos/jakelauer/theseus-js/commits/${{ github.sha }}/check-runs | jq -r '.check_runs[] | select(.name == "build") | .html_url | capture("/runs/(?<number>[0-9]+)/job") | .number' | sed 's/"//g' | head -n 1)
          echo "Fetched Run ID: $BUILD_RUN_ID"
          echo "::set-output name=run_id::$BUILD_RUN_ID"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  wait-for-build:
    needs: trigger-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait for Build to Complete
        run: gh run watch ${{ needs.trigger-build.outputs.build_workflow_run_id }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  trigger-test:
    needs: wait-for-build
    runs-on: ubuntu-latest
    outputs:
      test_workflow_run_id: ${{ steps.get-test-run-id.outputs.run_id }}
    steps:
      - name: Trigger Test Workflow
        id: trigger-test
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Test
          token: ${{ secrets.GH_PAT }}

      - name: Fetch the Test Workflow Run ID
        id: get-test-run-id
        run: |
          TEST_RUN_ID=$(gh api repos/jakelauer/theseus-js/commits/${{ github.sha }}/check-runs | jq -r '.check_runs[] | select(.name == "test") | .html_url | capture("/runs/(?<number>[0-9]+)/job") | .number' | sed 's/"//g' | head -n 1)
          echo "Fetched Run ID: $TEST_RUN_ID"
          echo "::set-output name=run_id::$TEST_RUN_ID"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  wait-for-test:
    needs: trigger-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Wait for Test to Complete
        run: gh run watch ${{ needs.trigger-test.outputs.test_workflow_run_id }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  publish:
    needs: wait-for-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Download Build Artifact
        run: |
          mkdir -p temp_artifacts
          gh run download ${{ needs.trigger-build.outputs.build_workflow_run_id }} -n build-artifact --dir temp_artifacts
          rsync -av temp_artifacts/ ./
          rm -rf temp_artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Version
        run: pnpm update-version --type ${{ github.event.inputs.publish_type }} --commit true

      - name: Configure Git
        run: |
          git config --local user.name "GitHub Action"
          git config --local user.email "action@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

      - name: Commit changes
        run: |
          git add package.json
          git commit -m "Publishing minor update"

      - name: Push changes
        run: |
          git push origin main

      - name: Publish package
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: pnpm publish --access public
